<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="Shelf" Id="{3d9f0b3c-423f-4111-b491-3e2008c6149a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Shelf IMPLEMENTS IShelf
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	rowCount : UINT;
   	columnCount : UINT;
	spaces: ARRAY[0..MAX_ROWS, 0..MAX_COLUMNS] OF ShelfElement();
	freeSpaces: FifoBuffer;
	occupiedSpaces: FifoBuffer;
END_VAR
VAR CONSTANT
	MAX_COLUMNS: INT := 1;
	MAX_ROWS: INT := 1;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{0a50a784-8334-43a1-ae32-46b761b423d9}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)   
	nRows: UINT := 10;
	mColumns: UINT := 10;
END_VAR
VAR
	i: UINT;
	j: UINT;
	k: UINT := 0;
	shelfElement: IShelfElement;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.rowCount := nRows;
THIS^.columnCount := mColumns;

FOR i:=0 TO nRows - 1 DO
	FOR j:=0 TO mColumns - 1 DO
		shelfElement := THIS^.spaces[i, j];
		shelfElement.row := i;
		shelfElement.column := j;
		THIS^.freeSpaces.A_Add(in := shelfElement); 
	END_FOR
END_FOR
]]></ST>
      </Implementation>
    </Method>
    <Method Name="getNextFreeSpace" Id="{32dc9da4-accb-44dc-a749-0ed0e3a6e98f}">
      <Declaration><![CDATA[{warning 'Methodenimplementierung hinzufügen'}
METHOD getNextFreeSpace : IShelfElement
VAR
	freeShelfElement: IShelfElement;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.freeSpaces.A_Get( out => freeShelfElement);
getNextFreeSpace := freeShelfElement;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="getNextOccupiedSpace" Id="{632fe013-3b30-4c76-815d-4c8939bdcd27}">
      <Declaration><![CDATA[{warning 'Methodenimplementierung hinzufügen'}
METHOD getNextOccupiedSpace : IShelfElement
VAR
	occupiedShelfElement: IShelfElement;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.occupiedSpaces.A_Get( out => occupiedShelfElement);
getNextOccupiedSpace := occupiedShelfElement;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getShelfSpaceByPartId" Id="{511bbb8d-27ef-45bd-82df-09f9fc9580d8}">
      <Declaration><![CDATA[{warning 'Methodenimplementierung hinzufügen'}
METHOD getShelfSpaceByPartId : IShelfElement
VAR_INPUT
	partId: String(23);
END_VAR
VAR
	i: UINT;
	j: UINT;
	shelfElement: IShelfElement;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i:=0 TO THIS^.rowCount - 1 DO
	FOR j:=0 TO THIS^.columnCount - 1 DO
		shelfElement := THIS^.spaces[i, j];
		IF NOT(shelfElement.part = 0) THEN
			IF shelfElement.part.id = partId THEN
				getShelfSpaceByPartId := shelfElement;
				RETURN;
			END_IF;
		END_IF
	END_FOR
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Property Name="m" Id="{49c9368a-155b-4ec9-9182-4096be6564af}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
PROPERTY m : UINT
]]></Declaration>
      <Get Name="Get" Id="{81b89b0e-4830-4fbb-b213-bd81804869d2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[m := THIS^.columnCount;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="n" Id="{cb54959c-40ca-45dc-8ee1-021068e4c8ac}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
PROPERTY n : UINT
]]></Declaration>
      <Get Name="Get" Id="{ee0f3904-8b4c-48cd-9452-a4d28267ed4e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[n := THIS^.rowCount;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="storeNextPart" Id="{daeb8f3f-23fc-4cfd-960d-c361ed5265d3}">
      <Declaration><![CDATA[METHOD storeNextPart : BOOL
VAR_INPUT
	part: IPart;
END_VAR
VAR
	shelfElement: IShelfElement;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.freeSpaces.A_Remove(out=>shelfElement);
IF NOT (shelfElement = 0) THEN
	shelfElement.store(part);
	THIS^.occupiedSpaces.A_Add(in:=shelfElement);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="unloadNextPart" Id="{f22afc7e-eb53-44fa-bdab-39ad3d421548}">
      <Declaration><![CDATA[{warning 'Methodenimplementierung hinzufügen'}
METHOD unloadNextPart : IPart
VAR
	shelfElement: IShelfElement;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// remove element from occupied spaces
THIS^.occupiedSpaces.A_Remove( out => shelfElement);

// store part and set to 0
unloadNextPart := shelfElement.unload();

// add to free spaces
THIS^.freeSpaces.A_Add(in:=shelfElement);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="unloadPartById" Id="{d135e5b2-c295-4118-a419-3f9938e966fc}">
      <Declaration><![CDATA[{warning 'Methodenimplementierung hinzufügen'}
METHOD unloadPartById : IPart
VAR_INPUT
	partId: STRING(23);
END_VAR
VAR
	shelfElement: IShelfElement;
	part: IPart;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[shelfElement := THIS^.getShelfSpaceByPartId(partId);
IF NOT(shelfElement = 0) THEN
	unloadPartById := shelfElement.unload();
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="Shelf">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Shelf.FB_init">
      <LineId Id="21" Count="0" />
      <LineId Id="1" Count="0" />
      <LineId Id="3" Count="0" />
      <LineId Id="11" Count="1" />
      <LineId Id="18" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="15" Count="1" />
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="Shelf.getNextFreeSpace">
      <LineId Id="4" Count="0" />
      <LineId Id="1" Count="0" />
      <LineId Id="3" Count="0" />
    </LineIds>
    <LineIds Name="Shelf.getNextOccupiedSpace">
      <LineId Id="3" Count="0" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="Shelf.getShelfSpaceByPartId">
      <LineId Id="1" Count="1" />
      <LineId Id="6" Count="0" />
      <LineId Id="4" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="3" Count="0" />
    </LineIds>
    <LineIds Name="Shelf.m.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Shelf.n.Get">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Shelf.storeNextPart">
      <LineId Id="1" Count="4" />
    </LineIds>
    <LineIds Name="Shelf.unloadNextPart">
      <LineId Id="5" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="4" Count="0" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="Shelf.unloadPartById">
      <LineId Id="1" Count="3" />
    </LineIds>
  </POU>
</TcPlcObject>